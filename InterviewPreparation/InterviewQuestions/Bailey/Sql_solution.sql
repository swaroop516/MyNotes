-- Active: 1653296915051@@127.0.0.1@3306@weather_db
CREATE VIEW REVENUE_MEMBER_STATUS AS 
WITH REVENUE_ACT
AS (
	SELECT DISTINCT A.MEMBER_ID,
		B.CALENDAR_YEAR_MONTH,
		CASE 
			WHEN A.ACTIVITY_YEAR_MONTH = B.CALENDAR_YEAR_MONTH
				THEN 1
			ELSE 0
			END AS FLAG,
		MIN(A.ACTIVITY_YEAR_MONTH) OVER (PARTITION BY MEMBER_ID) AS START_MONTH, --- To get the user started playing
		MAX(A.ACTIVITY_YEAR_MONTH) OVER (PARTITION BY MEMBER_ID) AS LAST_MONTH --- To get the last played month by user
	FROM REVENUE_ANALYSIS A
	INNER JOIN (
		SELECT DISTINCT CALENDAR_YEAR_MONTH
		FROM `CALENDAR`
		WHERE CALENDAR_YEAR_MONTH >= 201701			----Here I have just added the duration, we can remove this condition if its not required
			AND CALENDAR_DAY_OF_MONTH <= 201806
		) B ON 1 = 1
	WHERE BANK_TYPE_ID = 0			--- To get only real money used by member in the month
		AND NUMBER_OF_WAGERS >= 1	--- To get the Minmum of 1 wager in the month by member
	)
SELECT D.MEMBER_ID,
	D.CALENDAR_YEAR_MONTH,
	CASE 
		WHEN LAGGED_FLAG IS NULL
			THEN 'NEW'
		WHEN FLAG = 1
			AND LAGGED_FLAG = 1
			THEN 'RETAINED'
		WHEN LAGGED_FLAG = 1
			AND FLAG = 0
			THEN 'UNRETAINED'
		WHEN LAGGED_FLAG = 0
			AND FLAG = 1
			THEN 'REACTICATED'
		WHEN LAGGED_FLAG = 0
			AND FLAG = 0
			THEN 'LAPSED'
		END AS MEMBER_LIFECYCLE_STATUS,
	COALESCE(LAG(LAPSED_MONTHS, 1) OVER (
			PARTITION BY MEMBER_ID ORDER BY CALENDAR_YEAR_MONTH
			), 0) AS LAPSED_MONTHS			----Lapsed month will be 2 months after the last active month
FROM (
	SELECT MEMBER_ID,
		CALENDAR_YEAR_MONTH,
		FLAG,
		LAG(FLAG, 1) OVER (
			PARTITION BY MEMBER_ID ORDER BY CALENDAR_YEAR_MONTH
			) AS LAGGED_FLAG,
		SUM(LAPSED_CHECK) OVER (
			PARTITION BY MEMBER_ID ORDER BY CALENDAR_YEAR_MONTH
			) AS LAPSED_MONTHS
	FROM (
		SELECT DISTINCT MEMBER_ID,
			CALENDAR_YEAR_MONTH,
			LAST_MONTH,
			CASE 
				WHEN CALENDAR_YEAR_MONTH <= LAST_MONTH
					THEN 0
				ELSE 1
				END LAPSED_CHECK,
			MAX(FLAG) OVER (
				PARTITION BY MEMBER_ID,
				CALENDAR_YEAR_MONTH
				) AS FLAG
		FROM REVENUE_ACT
		WHERE CALENDAR_YEAR_MONTH >= START_MONTH
		) C
	) D;



SELECT * from REVENUE_MEMBER_STATUS;
